{"remainingRequest":"/Users/satus/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/satus/vue/src/views/Old/Tabla.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/satus/vue/src/views/Old/Tabla.vue","mtime":1637748524000},{"path":"/Users/satus/vue/node_modules/cache-loader/dist/cjs.js","mtime":1736076365498},{"path":"/Users/satus/vue/node_modules/babel-loader/lib/index.js","mtime":1736076366266},{"path":"/Users/satus/vue/node_modules/cache-loader/dist/cjs.js","mtime":1736076365498},{"path":"/Users/satus/vue/node_modules/vue-loader/lib/index.js","mtime":1736076366535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmNvbnN0IGdpdGh1YkFQSSA9ICdodHRwczovL2FwaS5naXRodWIuY29tL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT1sYW5ndWFnZTpqYXZhc2NyaXB0JnNvcnQ9c3RhcnMmb3JkZXI9ZGVzYyZwZXJfcGFnZT0xMDAmcGFnZT0nOwogIAogIGV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogeyAgCiAgICBuYW1lOiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICdUYWJsYScKICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZ2l0aHViUGFnZTogMSwKICAgICAgICByZXBvc2l0b3JpZXM6IFtdLAogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgcGVyUGFnZTogNQogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgdGhpcy5mZXRjaERhdGEoKQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgIHNob3dSZXBvcygpIHsKICAgICAgICBsZXQgc3RhcnQgPSAodGhpcy5wYWdlIC0gMSkgKiB0aGlzLnBlclBhZ2U7CiAgICAgICAgbGV0IGVuZCA9IHN0YXJ0ICsgdGhpcy5wZXJQYWdlOwogICAgICAgIHJldHVybiB0aGlzLnJlcG9zaXRvcmllcy5zbGljZShzdGFydCwgZW5kKTsKICAgICAgfSwKICAgICAgbGFzdFBhZ2UoKSB7CiAgICAgICAgbGV0IGxlbmd0aCA9IHRoaXMucmVwb3NpdG9yaWVzLmxlbmd0aDsKICAgICAgICByZXR1cm4gbGVuZ3RoIC8gdGhpcy5wZXJQYWdlOwogICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBmZXRjaERhdGEoKSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBheGlvcy5nZXQoZ2l0aHViQVBJICsgdGhpcy5naXRodWJQYWdlKQogICAgICAgICAgLnRoZW4oKHtkYXRhfSkgPT4gewogICAgICAgICAgICB0aGlzLnJlcG9zaXRvcmllcyA9IHRoaXMucmVwb3NpdG9yaWVzLmNvbmNhdChkYXRhLml0ZW1zKTsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgICAgdGhyb3cgZXJyOwogICAgICAgICAgfSkKICAgICAgfSwKICAgICAgcHJldlBhZ2UoKSB7CiAgICAgICAgdGhpcy5wYWdlLS07CiAgICAgICAgd2luZG93LnNjcm9sbFRvKHt0b3A6IDAsIGJlaGF2aW9yOiAnc21vb3RoJ30pOwogICAgICB9LAogICAgICBuZXh0UGFnZSgpIHsKICAgICAgICBpZiAodGhpcy5wYWdlID09IHRoaXMubGFzdFBhZ2UgLSAxKSB7CiAgICAgICAgICB0aGlzLmdpdGh1YlBhZ2UrKzsKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICAgICAgfQogICAgICAgIHRoaXMucGFnZSsrOwogICAgICAgIHdpbmRvdy5zY3JvbGxUbyh7dG9wOiAwLCBiZWhhdmlvcjogJ3Ntb290aCd9KTsKICAgICAgfQogICAgfQogIH0K"},{"version":3,"sources":["Tabla.vue"],"names":[],"mappings":";AAqFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tabla.vue","sourceRoot":"src/views/Old","sourcesContent":["<template>\n<div>\n  <h1 class=\"pb-2\">\n     <icons :icon=\"['fas', 'star']\" /> \n       (Ejemplo)\n     <icons :icon=\"['fas', 'star']\" /> \n       Tabla que obtiene datos de una API Json externa  \n     <icons :icon=\"['fas', 'award']\" /> \n   </h1>\n   <p> A continuación se muestra un ejemplo de obtención de datos externos a partir de una \n      <b-link href='https://api.github.com/search/repositories?q=language:javascript&sort=stars&order=desc&per_page=100&page='>API Json</b-link>\n    <p>\n\n     \n     \n\n    <table class=\"table\">\n        <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">Rank</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Stars</th>\n            <th scope=\"col\">Avatar</th>\n            <th scope=\"col\">Github Link</th>\n            <th scope=\"col\">Homepage</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"repo in showRepos\" :key=\"repo.id\" class=\"mt-2\">\n            <th scope=\"row\">\n                {{ repositories.indexOf(repo) + 1 }}\n            </th>\n            <td>\n                {{ repo.name }}\n            </td>\n            <td>\n                {{ repo.stargazers_count.toLocaleString() }}\n            </td>\n            <td>\n                <img v-if=\"repo.owner.avatar_url\" class=\"avatar\" :src=\"repo.owner.avatar_url\"/>\n            </td>\n            <td>\n                <a :href=\"repo.html_url\" target=\"_blank\">Link</a>\n            </td>\n            <td>\n                <a v-if=\"repo.homepage\" :href=\"repo.homepage\" target=\"_blank\">Homepage</a>\n                <p v-else>No homepage</p>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n\n\n        <!-- <Tabla :showRepos=\"showRepos\" :repositories=\"repositories\"/> -->\n<!-- PAGINACION -->\n        <div v-if=\"loading\" class=\"justify-content-center\">\n            <icons :icon=\"['fas', 'spinner']\" class=\"fa-spinner\"/>\n        </div>\n\n        <div class=\"my-4\">\n            <ul class=\"pagination pagination-md justify-content-center text-center\">\n                <li class=\"page-item\" :class=\"page === 1 ? 'disabled' : ''\">\n                    <a\n                            class=\"page-link\"\n                            @click=\"prevPage\"\n                    >\n                        Previous\n                    </a>\n                </li>\n                <li class=\"page-link\" style=\"background-color: inherit\">\n                    {{ page }} of {{ lastPage }}\n                </li>\n                <li class=\"page-item\" :class=\"page === lastPage ? 'disabled' : ''\">\n                    <a class=\"page-link\"\n                       @click=\"nextPage\"\n                    >\n                        Next\n                    </a>\n                </li>\n            </ul>\n        </div><!--./Pagination -->\n        </div>\n</template>\n\n<script>\nimport axios from 'axios';\nconst githubAPI = 'https://api.github.com/search/repositories?q=language:javascript&sort=stars&order=desc&per_page=100&page=';\n  \n  export default {\n  props: {  \n    name: {\n        type: String,\n        default: 'Tabla'\n      }\n    },\n    data() {\n      return {\n        githubPage: 1,\n        repositories: [],\n        page: 1,\n        loading: false,\n        perPage: 5\n      }\n    },\n    mounted() {\n      this.fetchData()\n    },\n    computed: {\n      showRepos() {\n        let start = (this.page - 1) * this.perPage;\n        let end = start + this.perPage;\n        return this.repositories.slice(start, end);\n      },\n      lastPage() {\n        let length = this.repositories.length;\n        return length / this.perPage;\n      }\n    },\n    methods: {\n      fetchData() {\n        this.loading = true;\n        axios.get(githubAPI + this.githubPage)\n          .then(({data}) => {\n            this.repositories = this.repositories.concat(data.items);\n            this.loading = false;\n          })\n          .catch((err) => {\n            throw err;\n          })\n      },\n      prevPage() {\n        this.page--;\n        window.scrollTo({top: 0, behavior: 'smooth'});\n      },\n      nextPage() {\n        if (this.page == this.lastPage - 1) {\n          this.githubPage++;\n          this.fetchData();\n        }\n        this.page++;\n        window.scrollTo({top: 0, behavior: 'smooth'});\n      }\n    }\n  }\n</script>\n \n\n<style>\n    @keyframes spinner {\n        to {\n            transform: rotate(360deg);\n        }\n    }\n    .fa-spinner {\n        animation: spinner 1s linear infinite;\n    }\n    a:hover {\n        cursor: pointer;\n    }\n    \n    .avatar {\n        max-width: 50px;\n    }\n</style>"]}]}