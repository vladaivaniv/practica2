{"remainingRequest":"/Users/satus/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/satus/vue/src/views/Cognitiva2.vue?vue&type=style&index=0&id=1fd76956&scoped=true&lang=css","dependencies":[{"path":"/Users/satus/vue/src/views/Cognitiva2.vue","mtime":1736089650354},{"path":"/Users/satus/vue/node_modules/css-loader/dist/cjs.js","mtime":1736076366021},{"path":"/Users/satus/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1736076367112},{"path":"/Users/satus/vue/node_modules/postcss-loader/src/index.js","mtime":1736076366259},{"path":"/Users/satus/vue/node_modules/cache-loader/dist/cjs.js","mtime":1736076365498},{"path":"/Users/satus/vue/node_modules/vue-loader/lib/index.js","mtime":1736076366535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIEFmZWdpciBlc3RpbHMgZGUgQm9vdHN0cmFwICovCi5jb2xvci1idXR0b24gewogIGZvbnQtc2l6ZTogMXJlbTsKICBjb2xvcjogd2hpdGU7CiAgYm9yZGVyOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItcmFkaXVzOiAwLjVyZW07CiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsKfQoKLmNvbG9yLWJ1dHRvbjpob3ZlciB7CiAgb3BhY2l0eTogMC44NTsKfQo="},{"version":3,"sources":["Cognitiva2.vue"],"names":[],"mappings":";AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Cognitiva2.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"cognitiva container text-center mt-5\" aria-label=\"Exemple de discapacitat cognitiva - Segona part\">\n    <h1 class=\"sr-only\">Discapacitat Cognitiva - Exemple 2</h1>\n    <p class=\"sr-only\">\n      Aquesta p√†gina simula dificultats cognitives mitjan√ßant instruccions canviants i associacions complexes.\n    </p>\n    <div class=\"content-container p-4 bg-light rounded shadow-sm\">\n      <p class=\"explanation h5\">\n        Llegeix atentament la instrucci√≥ i fes clic al bot√≥ correcte abans que s'acabi el temps.\n      </p>\n\n      <!-- Instruccions din√†miques -->\n      <div class=\"instruction alert alert-info mt-3\">\n        <p :class=\"{ 'text-danger': timer <= 3 }\" class=\"m-0\">\n          {{ currentInstruction }}\n        </p>\n      </div>\n\n      <!-- Botons amb colors -->\n      <div class=\"buttons-container mt-4 d-flex flex-wrap justify-content-center gap-3\">\n        <b-button\n          v-for=\"(button, index) in buttons\"\n          :key=\"index\"\n          :style=\"{ backgroundColor: button.color }\"\n          class=\"color-button px-4 py-2\"\n          @click=\"handleButtonClick(button)\"\n        >\n          {{ button.label }}\n        </b-button>\n      </div>\n\n      <!-- Feedback -->\n      <b-alert\n        v-if=\"successMessage\"\n        variant=\"success\"\n        dismissible\n        class=\"mt-4\"\n      >\n        üéâ Correcte! üéâ\n      </b-alert>\n      <b-alert\n        v-if=\"errorMessage\"\n        variant=\"danger\"\n        dismissible\n        class=\"mt-4\"\n      >\n        ‚ùå Incorrecte! Torna-ho a provar.\n      </b-alert>\n\n      <!-- Cron√≤metre -->\n      <div class=\"timer alert alert-secondary mt-3\">\n        <p :class=\"{ 'text-danger': timer <= 3 }\" class=\"m-0\">\n          Temps restant: {{ timer }} segons\n        </p>\n      </div>\n\n      <b-button variant=\"primary\" class=\"mt-4\" @click=\"navigateHome\">\n        Tornar a l'inici\n      </b-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Cognitiva2\",\n  data() {\n    return {\n      currentInstruction: \"\",\n      buttons: [],\n      successMessage: false,\n      errorMessage: false,\n      timer: 10, // Temps inicial\n      intervalId: null,\n      gameActive: true, // Controla si el joc est√† actiu\n      instructions: [\n        { text: \"Fes clic al bot√≥ vermell\", match: { color: \"red\" } },\n        { text: \"Selecciona el bot√≥ amb l'etiqueta 'Continua'\", match: { label: \"Continua\" } },\n        { text: \"Troba el bot√≥ blau\", match: { color: \"blue\" } },\n        { text: \"Prem el bot√≥ amb l'etiqueta 'Finalitza'\", match: { label: \"Finalitza\" } },\n      ],\n    };\n  },\n  mounted() {\n    this.startGame();\n  },\n  beforeDestroy() {\n    this.clearTimer();\n  },\n  methods: {\n    startGame() {\n      this.gameActive = true;\n      this.generateNewRound();\n      this.startTimer();\n    },\n    generateNewRound() {\n      if (!this.gameActive) return;\n      this.clearFeedback();\n      this.timer = 10;\n      const instruction = this.instructions[Math.floor(Math.random() * this.instructions.length)];\n      this.currentInstruction = instruction.text;\n      this.matchCriteria = instruction.match;\n      this.buttons = this.generateButtons();\n    },\n    generateButtons() {\n      const colors = [\"red\", \"blue\", \"green\", \"yellow\"];\n      const labels = [\"Continua\", \"Finalitza\", \"Tanca-ho\", \"Blau\"];\n      return labels.map((label, i) => ({\n        label,\n        color: colors[i],\n        correct: this.isCorrectButton(colors[i], label),\n      })).sort(() => Math.random() - 0.5);\n    },\n    isCorrectButton(color, label) {\n      return (\n        (this.matchCriteria.color && this.matchCriteria.color === color) ||\n        (this.matchCriteria.label && this.matchCriteria.label === label)\n      );\n    },\n    handleButtonClick(button) {\n      if (!this.gameActive) return;\n      this.clearTimer();\n      if (button.correct) {\n        this.successMessage = true;\n        setTimeout(() => {\n          this.successMessage = false;\n          this.generateNewRound();\n          this.startTimer();\n        }, 1500);\n      } else {\n        this.errorMessage = true;\n        setTimeout(() => {\n          this.errorMessage = false;\n          this.generateNewRound();\n          this.startTimer();\n        }, 1500);\n      }\n    },\n    startTimer() {\n      this.clearTimer();\n      this.intervalId = setInterval(() => {\n        if (this.timer > 0) {\n          this.timer -= 1;\n        } else {\n          this.clearTimer();\n          this.errorMessage = true;\n          setTimeout(() => {\n            this.errorMessage = false;\n            this.generateNewRound();\n            this.startTimer();\n          }, 1500);\n        }\n      }, 1000);\n    },\n    clearTimer() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n      }\n    },\n    clearFeedback() {\n      this.successMessage = false;\n      this.errorMessage = false;\n    },\n    navigateHome() {\n      this.gameActive = false;\n      this.clearTimer();\n      window.location.href = \"/\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Afegir estils de Bootstrap */\n.color-button {\n  font-size: 1rem;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n.color-button:hover {\n  opacity: 0.85;\n}\n</style>\n"]}]}